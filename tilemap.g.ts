// Auto-generated code. Do not edit.
namespace myTiles {
    //% fixedInstance jres blockIdentity=images._tile
    export const transparency16 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile1 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile2 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile3 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile4 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile6 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile5 = image.ofBuffer(hex``);

    helpers._registerFactory("tilemap", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "level1":
            case "level1":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [], -Infinity);
            case "level2":
            case "level2":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [], -Infinity);
            case "level5":
            case "level5":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level3":
            case "level3":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . 2 2 . . . . . . . . . . 
. . . 2 . . . . . . . . . . . . 
. 2 . . . . . . . . . . . . . . 
. . 2 2 . 2 2 . . . . . . . . . 
. . . . . . . 2 2 2 2 . . . . . 
. . . . . . . . . . . . . 2 . 2 
. . . . . . . . . . . . . . . . 
. . . . . . . . 2 . . 2 . . . . 
. . . . . . 2 2 2 . . . . . . . 
2 2 2 2 2 . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16,sprites.dungeon.floorLight2,sprites.dungeon.collectibleBlueCrystal,sprites.dungeon.collectibleInsignia,sprites.dungeon.hazardLava0,sprites.dungeon.hazardLava1,sprites.dungeon.collectibleRedCrystal,myTiles.tile1,myTiles.tile3], TileScale.Sixteen);
            case "level4":
            case "level4":return tiles.createTilemap(hex``, img`
....................
....................
....................
....................
....................
....................
....................
....................
....................
....................
....................
....................
....................
....................
....................
22222222222222222222
`, [myTiles.transparency16,sprites.dungeon.hazardLava1,sprites.dungeon.collectibleBlueCrystal,sprites.dungeon.collectibleInsignia,myTiles.tile2], TileScale.Sixteen);
            case "level7":
            case "level7":return tiles.createTilemap(hex`100010000000000000000000000000000000000e03000000000000000000000000000000010000000000000000000000000000000001010000000001010101000000000000000000000000000000000100000000000000000000000507080d0001000000000000000000000604090d00000000000000000000000d0b0c0a0d00000000010000000001000000000000010000000000000000000100000000000000000000000000000000000000000000000000010000020001000000000000000d0000000000000000000000000000000100000000000100000000000001000000000000000000000000000000000000000000000f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f`, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
2 . . . . . . . . . . . . . . . 
. . . . . . . 2 2 2 2 . . . . . 
. . . . . . . . . . . 2 . . . . 
. . . . . . . 2 . 2 . . 2 . . . 
. . . . . . . 2 . 2 . . . . . . 
. . . . . . . 2 2 2 . . . . . 2 
. . . . 2 . . . . . . 2 . . . . 
. . . . . 2 . . . . . . . . . . 
. . . . . . . . . . . . . . . 2 
. . . . 2 . . . . . . . . . . . 
. . . . . . . . . . . . 2 . . . 
. . 2 . . . . . . 2 . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16,sprites.dungeon.floorLight2,sprites.dungeon.collectibleInsignia,sprites.dungeon.collectibleBlueCrystal,sprites.dungeon.collectibleRedCrystal,sprites.dungeon.darkGroundNorthWest0,sprites.dungeon.darkGroundWest,sprites.dungeon.darkGroundNorth,sprites.dungeon.darkGroundNorthEast0,sprites.dungeon.darkGroundEast,sprites.dungeon.darkGroundSouthEast0,sprites.dungeon.darkGroundSouthWest0,sprites.dungeon.darkGroundSouth,myTiles.tile4,myTiles.tile3,sprites.dungeon.hazardLava1], TileScale.Sixteen);
            case "level6":
            case "level6":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . . 
. 2 . 2 2 . 2 . . . . . . 2 2 . . 
. . . . . . . . 2 . . . . . 2 . . 
. . . 2 2 2 2 . . . . . . 2 2 . . 
. . . . . . 2 2 . . . . . . 2 . . 
. . . . . . . . . . . . . . 2 . . 
. . . . . . . . . . 2 . . . . . . 
. . . . . . . . . 2 2 2 . . . . . 
. . . . . . . . 2 2 . . . . . . . 
. . . . . . . . 2 . . . . . . . . 
2 . . 2 2 2 2 2 . . . . . 2 2 2 . 
. 2 . . . . . . . . . . . 2 . . . 
. . 2 . . . . . . . . 2 2 2 . . . 
. . . 2 . . . . . . 2 2 2 2 . . . 
. . . 2 2 2 2 . . . 2 2 . . . . . 
. . . . . . . . . . . . . . . . . 
`, [myTiles.transparency16,myTiles.tile2,sprites.dungeon.floorLight2,sprites.dungeon.collectibleBlueCrystal,sprites.dungeon.collectibleInsignia,sprites.dungeon.hazardLava0,sprites.dungeon.hazardLava1,myTiles.tile3,sprites.dungeon.collectibleRedCrystal,myTiles.tile5], TileScale.Sixteen);
            case "level8":
            case "level8":return tiles.createTilemap(hex`0b0007000000000000000000000000000000000000000000000003000000000000000000040000000000000000000000010101010101010101010101020202020202020202010202020202020202020205`, img`
. . . . . . . . . . . 
. . . . . . . . . . . 
. . . . . . . . . . . 
. . . . . . . . . . . 
2 2 2 2 2 2 2 2 2 2 . 
2 . . . . . . . . . . 
. . . . . . . . . . . 
`, [myTiles.transparency16,sprites.dungeon.floorLight2,sprites.dungeon.hazardLava1,sprites.dungeon.collectibleInsignia,myTiles.tile6,myTiles.tile5], TileScale.Sixteen);
        }
        return null;
    })

    helpers._registerFactory("tile", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "transparency16":return transparency16;
            case "tile1":return tile1;
            case "tile2":return tile2;
            case "myTile":
            case "tile3":return tile3;
            case "myTile0":
            case "tile4":return tile4;
            case "myTile1":
            case "tile6":return tile6;
            case "tile5":return tile5;
        }
        return null;
    })

}
// Auto-generated code. Do not edit.
